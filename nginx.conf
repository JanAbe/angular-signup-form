events {

}

http {

    include /etc/nginx/mime.types;

    # Browser preferred language detection (does NOT require
    # AcceptLanguageModule)
    map $http_accept_language $accept_language {
#       ~* is case insensitive regex matching
#       case insensitive regex matching strings that start with nl within
#       the accept_language header and gives the value nl to the variable $accept_language
        ~*^nl nl;
        ~*^en-US en-US;
    }

#   create a server block with config for a virtual server
    server {
        listen 8081;
        server_name localhost; # the name of the server, if this name matches the config within this block gets used.
        root /www/data;
        server_tokens off;

        # Fallback to default language if no preference defined by browser
#       Case sensitive regex, matches an empty string (i think)
        if ($accept_language ~ "^$") {
            set $accept_language "en-US";
        }

        # Redirect "/" to Angular application in the preferred language of the browser
#       redirect root (/) to /<language>
#       e.g. localhost:8081/ -> localhost:8081/nl
        rewrite ^/$ /$accept_language permanent;

        # Everything under the Angular application is always redirected to Angular in the
        # correct language
        location ~ ^/(nl|en-US) {
#         $1 is the value of the first capture group, e.g nl or en-US
#         localhost:8081/nl gets matched and $1 = nl
#         it then tries to serve the file from /nl/index.html
#         Checks the existence of files in the specified order and uses the first found file for request processing
#         So this first tries to server the file as specified in the URL and if that isn't found it serves index.html
            try_files $uri /$1/index.html?$args;
        }
    }
}

